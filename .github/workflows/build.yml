name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-frontend:
    name: Build Frontend Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Build and Push
        run: |
          pushd frontend
            docker build --pull -t "${PREFIX}/examples-frontend-v1:${VERSION}" -t "${PREFIX}/examples-frontend-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-frontend-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/frontend.yml
          images: |
            ghcr.io/clouditor/examples-frontend-v1:latest
          imagepullsecrets: |
            ghcr-secret

  build-auth-service:
    name: Build Authentication Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      # - name: Build
      #   run: go build -v ./...
      #   working-directory: auth
      # - name: Test
      #   run: go test -v ./...
      #   working-directory: auth
      - name: Build and Push
        run: |
          pushd auth-service
            docker build --pull -t "${PREFIX}/examples-auth-service-v1:${VERSION}" -t "${PREFIX}/examples-auth-service-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-auth-service-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/auth-service.yml
          images: |
            ghcr.io/clouditor/examples-auth-service-v1:latest
          imagepullsecrets: |
            ghcr-secret

  build-nurse-api:
    name: Build Nurse API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      # - name: Build
      #   run: |
      #     ./gradlew --parallel build
      #   working-directory: nurse-api
      - name: Build and Push
        run: |
          pushd nurse-api
            docker build --pull -t "${PREFIX}/examples-nurse-api-v1:${VERSION}" -t "${PREFIX}/examples-nurse-api-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-nurse-api-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/nurse-api.yml
          images: |
            ghcr.io/clouditor/examples-nurse-api-v1:latest
          imagepullsecrets: |
            ghcr-secret

  build-phr-manager:
    name: Build PHR Manager
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      # - name: Build
      #   run: |
      #     python3 -m pip install -r requirements.txt
      #     python3 -m py_compile app.py
      #   working-directory: phr-manager
      - name: Build and Push
        run: |
          pushd phr-manager
            docker build --pull -t "${PREFIX}/examples-phr-manager-v1:${VERSION}" -t "${PREFIX}/examples-phr-manager-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-phr-manager-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/phr-manager.yml
          images: |
            ghcr.io/clouditor/examples-phr-manager-v1:latest
          imagepullsecrets: |
            ghcr-secret
  
  build-statistics:
    name: Build Statistics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      # - name: Build
      #   run: |
      #     python3 -m pip install -r requirements.txt
      #     python3 -m py_compile app.py
      #   working-directory: statistics
      - name: Build and Push
        run: |
          pushd statistics
            docker build --pull -t "${PREFIX}/examples-statistics-v1:${VERSION}" -t "${PREFIX}/examples-statistics-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-statistics-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/statistics.yml
          images: |
            ghcr.io/clouditor/examples-statistics-v1:latest
          imagepullsecrets: |
            ghcr-secret

  build-group-phr-controller:
    name: Build Group PHR Controller
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      # - name: Build
      #   run: |
      #     python3 -m pip install -r requirements.txt
      #     python3 -m py_compile app.py
      #   working-directory: group-phr-controller
      - name: Build and Push
        run: |
          pushd group-phr-controller
            docker build --pull -t "${PREFIX}/examples-group-phr-controller-v1:${VERSION}" -t "${PREFIX}/examples-group-phr-controller-v1:latest" --build-arg service_version=v1 .
            docker push "${PREFIX}/examples-group-phr-controller-v1:latest"
          popd
        if: github.ref == 'refs/heads/main'
        env:
          PREFIX: ghcr.io/clouditor
          VERSION: ${{ github.sha }}
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
        if: github.ref == 'refs/heads/main'
      - uses: azure/setup-kubectl@v1
        id: install
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: cloud-property-graphs-examples
          cluster-name: eks
        id: login
      - name: Run Az CLI script
        run: |
          az aks list
          kubectl get nodes
          kubectl get pods
        if: github.ref == 'refs/heads/main'
      - uses: Azure/k8s-deploy@v1
        with:
          namespace: cpg-examples-patient-community
          manifests: |
            kubernetes/group-phr-controller.yml
          images: |
            ghcr.io/clouditor/examples-group-phr-controller-v1:latest
          imagepullsecrets: |
            ghcr-secret