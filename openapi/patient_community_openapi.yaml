openapi: "3.0.0"
info:
  description: "patient platform api"
  version: "1.0.0"
  title: "Patient Community Example"
tags:
- name: "auth"
  description: "auth api"
- name: "nurse"
  description: "nurse frontend for managing users"
- name: "patient"
  description: "patient frontend"
- name: "researcher api"
  description: "researcher frontend"
- name: "patient manager"
  description: "internal patient manager for nurses"
- name: "phr"
  description: "phr api"
- name: "group phr"
  description: "group phr api"
- name: "statistics api"
  description: "internal statistics api for researchers"
- name: "disease api"
  description: "disease api"
paths:
  /auth/login:
    post:
      tags:
      - "auth"
      summary: "user login and token creation"
      operationId: "auth"
      requestBody:
        description: specifies the username/password to login with
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "OK"
        "404":
          description: "username/password combination not found"
  /auth/credentials:
    get:
      tags:
      - "auth"
      summary: "get JWK-compliant certificates"
      description: "Retrieves JWK-compliant certificates used in the JWT signing process"
      operationId: "authCreds"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"
  /api/v1/users:
    get:
      tags:
      - "patient manager"
      summary: "List users"
      operationId: "listUsers"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - "patient manager"
      summary: "Crete new user"
      operationId: "newUser"
      requestBody:
        description: specifies the user object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: "Created"
        "400":
          description: "Invalid"
  /api/v1/groups:
    post:
      tags:
      - "patient manager"
      summary: "Add a new group"
      description: "Add a new group"
      operationId: "addGroup"
      requestBody:
        description: specifies the group object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "201":
          description: "Created"
        "400":
          description: "Invalid"
  /api/v1/data:
    post:
      tags:
      - "phr"
      summary: "Add a new data record"
      description: "Add new health data record"
      operationId: "addData"
      requestBody:
        description: specifies the health data object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthRecord'
      responses:
        "201":
          description: "Created"
        "400":
          description: "Invalid"
  /api/v1/data/{recordId}:
    put:
      tags:
      - "phr"
      summary: "Update a new user"
      description: "Update new health data"
      operationId: "updateData"
      parameters:
        - name: recordId
          in: path
          required: true
          description: health data object to be updated
          schema:
            type: string
      requestBody:
        description: specifies the health data object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthRecord'
      responses:
        "201":
          description: "Created"
        "400":
          description: "Invalid"
  /api/v1/statistics:
    get:
      tags:
      - "statistics api"
      summary: "Get statistics"
      description: "Get statistics"
      operationId: "getStats"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: string
        "403":
          description: "Unauthorized"
  /api/v1/groupdata:
    get:
      tags:
      - "group phr"
      summary: "Get group phr"
      description: "Get group phr"
      operationId: "getGroupPhr"
      parameters:
        - name: patientId
          in: query
          description: requires patient id to check in which group he is; then, the group's PHR data can be retrieved
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                description: "Array of common group symptoms"
                items:
                  type: string
        "403":
          description: "Unauthorized"
  /api/v1/diseases:
    get:
      tags:
      - "disease api"
      summary: "Get diseases"
      description: "Get diseases"
      operationId: "getDiseases"
      parameters:
        - name: id
          in: query
          description: Symptoms
          schema:
            type: array
            items: 
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: "Unauthorized"
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: ["NURSE", "PATIENT", "RESEARCHER"]
    HealthRecord:
      type: object
      properties:
        userId:
          type: string
        groupId:
          type: string
          description: "The group ID identifies the (assumed) diagnosis"
        timestamp:
          type: string
        medication:
          type: string
        medication_dosage:
          type: integer
        symptom:
          type: string
        symptom_strength:
          type: integer
    Group:
      type: object
      properties:
        groupId:
          type: string
        groupName:
          type: string